<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>v_min_rec=0
v_hour_rec=0
v_min=10
v_hour=0
alarm[0]=30
//extract record
ini_open("sys.ini")
if room!=room_intro and room!=room_select{
v_min_rec=ini_read_real("room_min",room_get_name(room),12)
v_sec_rec=ini_read_real("room_hour",room_get_name(room),59)}
ini_close()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//check if the game is paused to contunue timer but stop clock
if instance_exists(obj_pause_menu)=false then{
if (v_hour=0 &amp;&amp; v_min=0) then{ with(obj_player){instance_destroy()}v_min=0 exit}
if (v_min!=0 || v_hour!=0) then{ 
                                if v_min=0 then {v_min=60 v_hour-=1}
                                v_min-=1 
                                alarm[0]=30 
                                
                               }}alarm[0]=30
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_timer,image_index,x,y)
draw_set_color(c_white)
if v_hour&lt;1 then draw_set_color(c_red)
draw_set_font(font_clock)
draw_set_valign(fa_left)
draw_set_halign(fa_left)
x=view_xport[0]+3
y=view_yport[0]
if v_hour&lt;10 and v_min&lt;10 then draw_text(x+55,y+10,string("0"+string(v_hour)+":0"+string(v_min)))
if v_hour&lt;10 and v_min&gt;9 then draw_text(x+55,y+10,string("0"+string(v_hour)+":"+string(v_min)))
if v_hour&gt;9 and v_min&lt;10 then draw_text(x+55,y+10,string(string(v_hour)+":0"+string(v_min)))
if v_hour&gt;9 and v_min&gt;9 then draw_text(x+55,y+10,string(string(v_hour)+":"+string(v_min)))
//draw animation
//if time&lt;
//draw_sprite(spr_time_moon, image_index,x+20,y+13)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
