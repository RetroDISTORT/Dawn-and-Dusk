<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*Records*/
minute_record = 0
hour_record   = 0

/*Status*/
minute        = 10
hour          = 0

/* Time */
max_minutes   = 5*60

/* Trigger Timer*/
alarm[0]=30

/* Load record */
ini_open("sys.ini")
if (room!=room_intro &amp;&amp; room!=room_select){
   minute_record = ini_read_real("room_min",room_get_name(room),12)
   hour_record   = ini_read_real("room_hour",room_get_name(room),59)
}
ini_close()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//check if the game is paused to contunue timer but stop clock
if instance_exists(obj_pause_menu)==false{
   minute -= 1;
   
   if (minute == -1){
      hour   -= 1;
      minute  = 59;
   }
     
   if (hour&lt;=-1) { 
      with(obj_player) instance_destroy()
      hour   = 0;
      minute = 0;
      exit
   }  
}

/*Reset Timer*/
alarm[0]=30
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_timer,image_index,x,y)
draw_set_color(c_white)
if (hour&lt;1) draw_set_color(c_red)
draw_set_font(font_clock)
draw_set_valign(fa_left)
draw_set_halign(fa_left)

x=view_xport[0]+3
y=view_yport[0]

if (hour&lt;10 &amp;&amp; minute&lt;10) draw_text(x+55,y+10,string("0"+string(hour)+":0"+string(minute)))
if (hour&lt;10 &amp;&amp; minute&gt;9 ) draw_text(x+55,y+10,string("0"+string(hour)+":" +string(minute)))
if (hour&gt;9  &amp;&amp; minute&lt;10) draw_text(x+55,y+10,string(    string(hour)+":0"+string(minute)))
if (hour&gt;9  &amp;&amp; minute&gt;9 ) draw_text(x+55,y+10,string(    string(hour)+":" +string(minute)))

//draw animation
//if time&lt;
day_stage = (minute + hour * 60)/max_minutes*24
draw_sprite(spr_sun_moon, day_stage, x+20, y+13)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
