<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.v_animation=0
v_animation=0
instance_create(0,0,obj_hud)
last_x=x 
last_y=y
global.init_x=x
global.init_y=y

/* Collision */
collision_width  = 31.9 //slightly smaller to avoid objects outside of grid
collision_height = 31.9

/* Status */
collision_top   = collision_rectangle(x-(collision_width/2-1),   y-(collision_height/2), x+(collision_width/2),   y-(3*collision_height/2), obj_mainblock, 0, 1);
collision_bottom = collision_rectangle(x-(collision_width/2-1),  y+(collision_height/2), x+(collision_width/2),   y+(3*collision_height/2), obj_mainblock, 0, 1);
collision_left  = collision_rectangle(x-(3*collision_width/2-1), y+(collision_height/2), x-(collision_width/2),   y-(collision_height/2),   obj_mainblock, 0, 1);
collision_right  = collision_rectangle(x+(collision_width/2-1),  y+(collision_height/2), x+(3*collision_width/2), y-(collision_height/2),   obj_mainblock, 0, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with obj_un_movable{visible=1}
with obj_movable{visible=1}

for(i = 0; i&lt;20;i++)
    instance_create(x,y,obj_death_1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>collision_top        = collision_rectangle(x-(collision_width/2),   y-(collision_height/2), x+(collision_width/2),   y-(3*collision_height/2), obj_mainblock, 0, 1);
collision_bottom     = collision_rectangle(x-(collision_width/2),   y+(collision_height/2), x+(collision_width/2),   y+(3*collision_height/2), obj_mainblock, 0, 1);
collision_left       = collision_rectangle(x-(3*collision_width/2), y+(collision_height/2), x-(collision_width/2),   y-(collision_height/2),   obj_mainblock, 0, 1);
collision_right      = collision_rectangle(x+(collision_width/2),   y+(collision_height/2), x+(3*collision_width/2), y-(collision_height/2),   obj_mainblock, 0, 1);
collision_center     = collision_rectangle(x+(collision_width/2),   y+(collision_height/2), x+(collision_width/2),   y-(collision_height/2),   obj_mainblock, 0, 1);
collision_fake_block = collision_rectangle(x+(collision_width/2),   y+(collision_height/2), x-(collision_width/2),   y-(collision_height/2),   obj_fake_block, 0, 1);

//stop if text box exists
if (instance_exists(obj_textbox)=false &amp;&amp; instance_exists(obj_pause_menu)=false &amp;&amp; sprite_index==spr_player &amp;&amp; place_snapped(32,32)){ /* check if not pause, reading, or not aligned*/
    move_x = 0;
    move_y = 0;
    
    if keyboard_check_pressed(vk_right) { move_x =  32; image_angle = 0;   collision = collision_right;  }
    if keyboard_check_pressed(vk_up)    { move_y = -32; image_angle = 90;  collision = collision_top;    }
    if keyboard_check_pressed(vk_left)  { move_x = -32; image_angle = 180; collision = collision_left;   }
    if keyboard_check_pressed(vk_down)  { move_y =  32; image_angle = 270; collision = collision_bottom; }
    
    if (move_x + move_y != 0){
        if ((collision == noone) /*|| collsion_bottom.object_index != obj_mainblock*/){ //no collision
            instance_create(x,y,obj_track)
            y +=move_y
            x +=move_x
        }    
        if (collision != noone &amp;&amp; collision.object_index == obj_movable){ //move block
            block        = collision;
            if (image_angle = 0)   block_collision = block.collision_right;
            if (image_angle = 90)  block_collision = block.collision_top;
            if (image_angle = 180) block_collision = block.collision_left;
            if (image_angle = 270) block_collision = block.collision_bottom;
            
            if (block_collision == noone){
                block.visible  = false;
                block.x       += move_x;
                block.y       += move_y;
                sprite_index   = spr_push_square; 
                image_speed    = 1;
            }
        }
    }
}

if (collision_fake_block == noone &amp;&amp; instance_exists(obj_fake_block))
    with(obj_fake_block) fade_alpha=1;
    
if (collision_fake_block != noone)
    collision_fake_block.fade_alpha=.3;

//zoom and focus
if obj_var_saver.v_zoom=1{
    if (view_wview[0]&gt;533) {view_wview[0]-=view_wview[0]/50 view_vspeed[0]=-1}
    if (view_hview[0]&gt;320) {view_hview[0]-=view_hview[0]/50 view_hspeed[0]=-1}
}
else{
    if (view_wview[0]&lt;799) {view_wview[0]+=view_wview[0]/50 view_vspeed[0]=-1}
    if (view_hview[0]&lt;479) {view_hview[0]+=view_hview[0]/50 view_hspeed[0]=-1}
}

//set fix speed and size
if obj_var_saver.v_zoom=0{
    if (view_wview[0]&gt;800) {view_wview[0]=800 view_vspeed[0]=5 view_hspeed[0]=5}
    if (view_hview[0]&gt;480) {view_hview[0]=480 view_vspeed[0]=5 view_hspeed[0]=5}
}
else{
    if (view_wview[0]&lt;533) {view_wview[0]=533 view_vspeed[0]=5 view_hspeed[0]=5}
    if (view_hview[0]&lt;320) {view_hview[0]=320 view_vspeed[0]=5 view_hspeed[0]=5}
}

//audio listener
audio_listener_position(x,y,0)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_int_hor">
      <action>
        <libid>1</libid>
        <id>212</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_enemy</sound>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_int_vert">
      <action>
        <libid>1</libid>
        <id>212</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_enemy</sound>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_hor">
      <action>
        <libid>1</libid>
        <id>212</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_enemy</sound>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_vert">
      <action>
        <libid>1</libid>
        <id>212</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_enemy</sound>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_end">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_timer</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set max Coins
ini_open("sys.ini")
ini_write_real("room_maxcoin",room_get_name(room),obj_score.var_maxcoin)
ini_close()
//check conditions
v_check=0
if obj_score.CurrentScore&gt;obj_score.score_rec then{
ini_open("sys.ini")
if room!=room_intro and room!=room_select{
ini_write_real("room_coins",room_get_name(room),obj_score.CurrentScore)
ini_write_real("room_min",room_get_name(room),obj_timer.v_min)
ini_write_real("room_hour",room_get_name(room),obj_timer.v_hour)}
ini_close()
v_check=1}
if v_check!=1{
if obj_score.CurrentScore=obj_score.score_rec then{ 
if ((v_hour_rec*60)+v_min_rec)&lt;((v_hour*60)+v_min) then{
if room!=room_intro and room!=room_select{
ini_open("sys.ini")
ini_write_real("room_coins",room_get_name(room),obj_score.CurrentScore)
ini_write_real("room_min",room_get_name(room),obj_timer.v_min)
ini_write_real("room_hour",room_get_name(room),obj_timer.v_hour)
ini_close()}}}}
instance_create(x,y,obj_stats)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_var_saver.v_zoom=0 then{ obj_var_saver.v_zoom=1 exit}
if obj_var_saver.v_zoom=1 then{ obj_var_saver.v_zoom=0 exit}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index=spr_player image_speed=0
with obj_un_movable{visible=1}
with obj_movable{visible=1}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1)
draw_self()
draw_set_alpha((obj_timer.v_hour*60+obj_timer.v_min)/720)
draw_sprite(spr_glow,0,x,y)
draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEBUGGER Collisions
debug_right_collision  = 0
debug_left_collision   = 0
debug_top_collision    = 0
debug_bottom_collision = 0

if (debug_right_collision)
    draw_rectangle_colour(x+(collision_width/2),   y+(collision_height/2), x+(3*collision_width/2), y-(collision_height/2), c_red, c_red, c_red, c_red, 1)

if (debug_left_collision)
    draw_rectangle_colour(x-(3*collision_width/2), y+(collision_height/2), x-(collision_width/2),   y-(collision_height/2), c_red, c_red, c_red, c_red, 1)

if (debug_top_collision)
    draw_rectangle_colour(x-(collision_width/2),   y-(collision_height/2), x+(collision_width/2),   y-(3*collision_height/2), c_red, c_red, c_red, c_red, 1)

if (debug_bottom_collision)
    draw_rectangle_colour(x-(collision_width/2),   y+(collision_height/2), x+(collision_width/2),   y+(3*collision_height/2), c_red, c_red, c_red, c_red, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="32">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>-100</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
